nothing$0 {X:Type} = Maybe X;
just$1 {X:Type} value:X = Maybe X;
left$0 {X:Type} {Y:Type} value:X = Either X Y;
right$1 {X:Type} {Y:Type} value:Y = Either X Y;

var_uint$_ {n:#} len:(#< n) value:(uint (len * 8))
         = VarUInteger n;

addr_none$00 = MsgAddressExt;
addr_extern$01 len:(## 9) external_address:(bits len)
             = MsgAddressExt;
anycast_info$_ depth:(#<= 30) { depth >= 1 }
   rewrite_pfx:(bits depth) = Anycast;
addr_std$10 anycast:(Maybe Anycast)
   workchain_id:int8 address:bits256  = MsgAddressInt;
addr_var$11 anycast:(Maybe Anycast) addr_len:(## 9)
   workchain_id:int32 address:(bits addr_len) = MsgAddressInt;
_ _:MsgAddressInt = MsgAddress;
_ _:MsgAddressExt = MsgAddress;

transfer#54b95f29
    query_id:uint64
    shares:(VarUInteger 32)
    destination:MsgAddress
    response_destination:MsgAddress
    custom_payload:(Maybe ^Cell)
    forward_ton_amount:(VarUInteger 16)
    forward_payload:(Either Cell ^Cell) = InternalMsgBody;

transfer_notification#44b23ab6
    query_id:uint64
    shares:(VarUInteger 32)
    sender:MsgAddress
    forward_payload:(Either Cell ^Cell) = InternalMsgBody;

internal_transfer#18386b06
    query_id:uint64
    shares:(VarUInteger 32)
    from:MsgAddress
    response_address:MsgAddress
    forward_ton_amount:(VarUInteger 16)
    forward_payload:Either Cell ^Cell = InternalMsgBody;

burn#dbc5a2f9
    query_id:uint64
    shares:(VarUInteger 32)
    response_destination:MsgAddress
    custom_payload:Maybe ^Cell = InternalMsgBody;

burn_notification#0aef5050
    query_id:uint64
    shares:(VarUInteger 32)
    sender:MsgAddress
    response_destination:MsgAddress = InternalMsgBody;

excesses#d53276db
    query_id:uint64 = InternalMsgBody;

change_supply#2d43c97f
     query_id:uint64
     new_total_supply:(VarUInteger 16) = InternalMsgBody;

mint#f496e3a7
    query_id:uint64
    to_address:MsgAddress
    forward_amount:(VarUInteger 16)
    master_msg:InternalMsgBody  = InternalMsgBody;